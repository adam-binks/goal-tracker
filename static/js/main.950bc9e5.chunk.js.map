{"version":3,"sources":["features/nodes/Node.module.css","features/nodes/Tree.module.css","features/homepage/homepage.module.css","features/menu/Menu.module.css","app/firebase.js","app/localstorage.js","features/nodes/nodesSlice.js","features/nodes/ValueIcon.js","DragItemTypes.js","features/navigation/navigationSlice.js","features/nodes/NodeLabel.js","features/nodes/Node.js","features/nodes/AddChildButton.js","features/nodes/Tree.js","features/menu/MenuButtons.js","App.js","features/homepage/Homepage.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","projects","collection","nodes","a","addDoc","present","docRef","toast","error","setDoc","doc","getFirebaseProject","getDoc","docSnap","exists","data","undefined","SAVES","AUTOSAVE","LAST_ACTIVE_PROJECT","loadAllSaves","serializedSaves","localStorage","getItem","JSON","parse","err","getLastActiveProject","project","saves","Object","keys","getSaveNames","rootNode","label","id","parents","getDefaultState","initialiseDisplayedChildren","getNode","state","find","node","updateNodeAttribute","attribute","value","removeNodeFromParentsDisplayedChildren","length","displayedChildren","index","indexOf","splice","getAncestors","ancestors","includes","push","forEach","parent","getValueAncestors","filter","ancestor","isValue","isDisplayedDescendantOf","descendant","getNewNodeColour","Please","make_color","i","potentialChild","map","valueColour","getFirebaseProjectThunk","createAsyncThunk","nodeSlice","createSlice","name","initialState","reducers","projectLoaded","_","action","payload","loadedNodes","nodeAdded","newNode","completed","valueIcon","insertAfter","valueAncestors","nodeDeleted","deleteRecursive","slice","child","findIndex","n","nodeReordered","newParentId","newIndex","nodeLabelUpdated","nodeCompleteUpdated","nodeIsValueUpdated","valueIconUpdated","icon","extraReducers","builder","addCase","fulfilled","actions","selectMaxDepth","Math","max","apply","depth","visited","undoable","reducer","ValueIcon","props","dispatch","useDispatch","useState","showEmojiPicker","setShowEmojiPicker","className","styles","onClick","emoji","emojiPicker","onSelect","nodeId","native","set","showPreview","showSkinTones","recent","ItemTypes","focussedDepth","activeProject","navigationSlice","focussedDepthUpdated","activeProjectUpdated","lastActiveProject","setItem","NodeLabel","nodeLabel","onKeyDown","event","key","shiftKey","ctrlKey","nanoid","preventDefault","target","onChange","e","minRows","maxRows","autoFocus","placeholder","Node","ref","useRef","rewardRef","useSelector","rewardEmojis","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","newParent","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","canDrop","throttledReorderNode","drop","useDrag","type","isDragging","drag","config","lifetime","nodeWrapper","style","zoom","deleteNodeButton","toggleValueButton","width","onMouseEnter","throttle","checked","currentTarget","rewardMe","AddChildButton","addChildButton","targetWidth","Tree","maxDepth","min","navigation","widthsByDepth","getWidthsByDepth","React","height","window","innerHeight","innerWidth","setDimensions","useEffect","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","arguments","debounce","addEventListener","removeEventListener","treeContainer","getDisplayedChildrenList","current_depth","parent_id","children","parseFloat","treeElement","wrapInUl","elements","tree","list_elements","grandchildren","childNode","numDepths","remainingWidth","document","documentElement","clientWidth","Array","fill","adjacents","remainingDepths","equiWidth","shrinkFactorBonus","adj_i","adjacent","MenuButtons","canUndo","past","canRedo","future","menuDiv","marginRight","marginTop","fontSize","place","effect","ActionCreators","undo","disabled","redo","App","params","useParams","DndProvider","backend","HTML5Backend","textDecoration","to","position","autoClose","hideProgressBar","Homepage","navigate","useNavigate","existingProjectId","createProject","createFirebaseProject","then","content","homepageButtonPrimary","homepageButtonSecondary","href","textAlign","color","store","configureStore","nodesReducer","navigationReducer","AUTOSAVE_PROPS","throttledFirebaseSave","getState","updateFirebaseProject","initSubscriber","subscribe","Boolean","location","hostname","match","ReactDOM","render","StrictMode","path","element","exact","padding","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.950bc9e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__wg4YW\",\"nodeWrapper\":\"Node_nodeWrapper__3WY4P\",\"isDragging\":\"Node_isDragging__1pmeU\",\"nodeLabel\":\"Node_nodeLabel__3CHoL\",\"valueIcon\":\"Node_valueIcon__26oPj\",\"emojiPicker\":\"Node_emojiPicker__2Dhfk\",\"hoverButton\":\"Node_hoverButton__3PrTT\",\"deleteNodeButton\":\"Node_deleteNodeButton__3P22n Node_hoverButton__3PrTT\",\"toggleValueButton\":\"Node_toggleValueButton__-m4rT Node_hoverButton__3PrTT\",\"scaleIn\":\"Node_scaleIn__2C3Yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treeContainer\":\"Tree_treeContainer__2IcCD\",\"tree\":\"Tree_tree__1c-DC\",\"treeElement\":\"Tree_treeElement__2CvD2\",\"addChildButton\":\"Tree_addChildButton__YVLj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"homepage_content__1x4vi\",\"homepageButtonPrimary\":\"homepage_homepageButtonPrimary__1QOeU\",\"homepageButtonSecondary\":\"homepage_homepageButtonSecondary__1ERQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuDiv\":\"Menu_menuDiv__jjw-M\",\"select\":\"Menu_select__2LyGJ\"};","import { initializeApp } from \"firebase/app\"\r\nimport { getFirestore, collection, setDoc, getDoc, doc, addDoc } from 'firebase/firestore/lite'\r\nimport { toast } from \"react-toastify\"\r\n\r\n// some concats included to reduce scraping\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaS\" + \"yDSca3qVB\" + \"kCgTig3S\" + \"zrbEvNbx\" + \"uY0YnMmGQ\", // eslint-disable-line no-useless-concat\r\n    authDomain: \"goal-tracker\" + \"-adam-binks.firebaseapp.com\", // eslint-disable-line no-useless-concat\r\n    projectId: \"goal-tracker\" + \"-adam-binks\", // eslint-disable-line no-useless-concat\r\n    storageBucket: \"goal-tracker\" + \"-adam-binks.appspot.com\", // eslint-disable-line no-useless-concat\r\n    messagingSenderId: \"143223897365\", // eslint-disable-line no-useless-concat\r\n    appId: \"1:143223897365\" + \":web:aeb3487a60d820c7637d1c\", // eslint-disable-line no-useless-concat\r\n    measurementId: \"G-43XXBKS2R9\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst db = getFirestore(app)\r\n\r\nconst projects = collection(db, 'projects')\r\n\r\nexport async function createFirebaseProject(nodes) {\r\n    try {\r\n        const docRef = await addDoc(projects, {\"nodes\": nodes.present})\r\n        return docRef\r\n    } catch (e) {\r\n        toast.error(\"Error creating project: \" + e)\r\n    }\r\n}\r\n\r\nexport async function updateFirebaseProject(projectId, nodes) {\r\n    if (nodes === \"loading\" || nodes?.present === \"loading\") {\r\n        return;\r\n    }\r\n    try {\r\n        await setDoc(doc(db, \"projects\", projectId), {\"nodes\": nodes.present})\r\n    } catch (e) {\r\n        toast.error(\"Error saving project: \" + e)\r\n    }\r\n}\r\n\r\nexport async function getFirebaseProject(projectId) {\r\n    const docRef = doc(db, \"projects\", projectId)\r\n    const docSnap = await getDoc(docRef)\r\n\r\n    if (docSnap.exists()) {\r\n        if (!docSnap.data().nodes) {\r\n            toast.error(`Missing root node on project id ${projectId}`)\r\n            return undefined\r\n        }\r\n        return docSnap.data().nodes\r\n    } else {\r\n        toast.error(`Project does not exist with id ${projectId}`)\r\n        return undefined\r\n    }\r\n}","export const SAVES = \"saves\"\r\nexport const AUTOSAVE = \"autosave\"\r\nconst LAST_ACTIVE_PROJECT = \"last_active_project\"\r\n\r\nconst loadAllSaves = () => {\r\n    try {\r\n        const serializedSaves = localStorage.getItem(SAVES);\r\n        if (serializedSaves === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedSaves)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const loadState = (save) => {\r\n    const saves = loadAllSaves()\r\n    if (saves) {\r\n        return saves[save]\r\n    }\r\n}\r\n\r\nexport const saveState = (state, save) => {\r\n    var saves = loadAllSaves()\r\n    if (!saves) {\r\n        saves = {}\r\n    }\r\n    saves[save] = state\r\n    localStorage.setItem(SAVES, JSON.stringify(saves))\r\n}\r\n\r\nexport const getSaveNames = () => {\r\n    const saves = loadAllSaves()\r\n    if (saves) {\r\n        return Object.keys(saves)\r\n    }\r\n    return [AUTOSAVE]\r\n}\r\n\r\nexport const getLastActiveProject = () => {\r\n    var project = localStorage.getItem(LAST_ACTIVE_PROJECT)\r\n    if (project) {\r\n        return project\r\n    }\r\n\r\n    const saves = getSaveNames()\r\n    if (saves) {\r\n        return saves[0]\r\n    }\r\n\r\n    return AUTOSAVE // default\r\n}\r\n\r\nexport const setLastActiveProject = (lastActiveProject) => {\r\n    localStorage.setItem(LAST_ACTIVE_PROJECT, lastActiveProject)\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Please from 'pleasejs'\r\nimport undoable from 'redux-undo';\r\nimport { getFirebaseProject } from '../../app/firebase';\r\nimport { getLastActiveProject, loadState } from '../../app/localstorage';\r\n\r\nconst USE_FIREBASE = true\r\n\r\n// values are incomplete - to be used with spread operator\r\nconst getDefaultNode = () => {\r\n    return {\r\n        label: \"\",\r\n        completed: false,\r\n        // isValue: false,\r\n        valueIcon: '⭐',\r\n        displayedChildren: [],\r\n    }\r\n}\r\n\r\nconst rootNode = {\r\n    label: 'Root',\r\n    id: 'root',\r\n    parents: [],\r\n}\r\n\r\nexport const getDefaultState = () => {\r\n    return {present: initialiseDisplayedChildren([rootNode])}\r\n}\r\n\r\nconst getNode = (state, id) => state.find(node => node.id === id)\r\n\r\nconst updateNodeAttribute = (state, id, attribute, value) => {\r\n    const node = getNode(state, id)\r\n    if (node) {\r\n        node[attribute] = value\r\n    }\r\n    return node\r\n}\r\n\r\nconst removeNodeFromParentsDisplayedChildren = (nodes, node) => {\r\n    if (node && node.parents.length) {\r\n        const displayedChildren = getNode(nodes, node.parents[0])?.displayedChildren\r\n        if (displayedChildren) {\r\n            const index = displayedChildren.indexOf(node.id)\r\n            displayedChildren.splice(index, 1)\r\n        }\r\n    }\r\n}\r\n\r\nconst getAncestors = (nodes, id, ancestors) => {\r\n    const node = getNode(nodes, id)\r\n    if (!node || ancestors.includes(node)) { return ancestors }\r\n    ancestors.push(node)\r\n    node.parents.forEach(parent => getAncestors(nodes, parent, ancestors))\r\n\r\n    return ancestors\r\n}\r\n\r\nexport const getValueAncestors = (nodes, id) => {\r\n    return getAncestors(nodes, id, []).filter(ancestor => ancestor.isValue)\r\n}\r\n\r\nconst isDisplayedDescendantOf = (nodes, descendant, ancestor) => {\r\n    if (ancestor === descendant) {\r\n        return true\r\n    }\r\n    if (!descendant.parents.length) {\r\n        return false\r\n    }\r\n    return isDisplayedDescendantOf(nodes, getNode(nodes, descendant.parents[0]), ancestor)\r\n}\r\n\r\nconst getNewNodeColour = (nodes) => {\r\n    const opt = {\r\n        'value': 0.95\r\n    }\r\n    // const initialPallet = [\r\n    //     'green',\r\n    //     'blue',\r\n    //     'yellow',\r\n    //     'fuchsia',\r\n    //     'olive',\r\n    //     'red',\r\n    // ].map(htmlColor => Please.make_color({...opt, 'base_color': htmlColor }))\r\n\r\n    // const numValueNodes = nodes.filter(node => node.isValue).length\r\n    // console.log(numValueNodes);\r\n    // if (numValueNodes <= initialPallet.length) {\r\n    //     return initialPallet[numValueNodes - 1]\r\n    // } else {\r\n    return Please.make_color(opt)\r\n    // }\r\n}\r\n\r\nconst initialiseDisplayedChildren = (nodes) => {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i]\r\n\r\n        // need to store this so we can reorder them\r\n        if (!node.displayedChildren) {\r\n            node.displayedChildren = nodes.filter(potentialChild => potentialChild.parents.length > 0 && potentialChild.parents[0] === node.id).map(node => node.id)\r\n        }\r\n\r\n        if (node.isValue && node.valueColour === undefined) {\r\n            node.valueColour = getNewNodeColour(nodes)\r\n        }\r\n    }\r\n    return nodes\r\n}\r\n\r\nfunction getInitialState() {\r\n    var state = undefined\r\n    if (USE_FIREBASE) {\r\n        return \"loading\"\r\n    }\r\n\r\n    state = loadState(getLastActiveProject())\r\n    if (!state) {\r\n        state = getDefaultState()\r\n    }\r\n    return initialiseDisplayedChildren(state)\r\n}\r\n\r\nexport const getFirebaseProjectThunk = createAsyncThunk(\"nodes/getFirebaseProject\", async (projectId) => {\r\n    return await getFirebaseProject(projectId)\r\n})\r\n\r\nexport const nodeSlice = createSlice({\r\n    name: 'nodes',\r\n    initialState: getInitialState(),\r\n\r\n    reducers: {\r\n        projectLoaded: (_, action) => {\r\n            return action.payload.loadedNodes // replace current state with loaded nodes\r\n        },\r\n\r\n        nodeAdded: (state, action) => {\r\n            const { id, parents } = action.payload\r\n\r\n            const isValue = action.payload.isValue !== undefined ? action.payload.isValue : (parents.length === 1 && parents[0] === \"root\")\r\n\r\n            var newNode = {\r\n                ...getDefaultNode(),\r\n                id: id,\r\n                parents: parents,\r\n                isValue: isValue,\r\n                valueColour: isValue && getNewNodeColour(state.nodes),\r\n            }\r\n            state.push(newNode)\r\n\r\n            if (parents.length > 0) {\r\n                const displayedChildren = getNode(state, parents[0]).displayedChildren\r\n                const insertAfter = action.payload.insertAfter\r\n                if (insertAfter && displayedChildren.indexOf(insertAfter) !== -1) {\r\n                    displayedChildren.splice(displayedChildren.indexOf(insertAfter) + 1, 0, id) // insert at index\r\n                }\r\n                else {\r\n                    displayedChildren.push(id)\r\n                }\r\n            }\r\n\r\n            const valueAncestors = getValueAncestors(state, id)\r\n            if (valueAncestors.length) {\r\n                newNode.valueIcon = valueAncestors[0].valueIcon\r\n            }\r\n        },\r\n\r\n        nodeDeleted: (state, action) => {\r\n            const deleteRecursive = (id) => {\r\n                const node = getNode(state, id)\r\n                node.displayedChildren.slice(0).map(child => deleteRecursive(child)) // slice to copy because we are deleting array elements\r\n                // remove this node\r\n                state.splice(state.findIndex((n) => n.id === node.id), 1)\r\n\r\n                removeNodeFromParentsDisplayedChildren(state, node)\r\n            }\r\n\r\n            deleteRecursive(action.payload.id)\r\n        },\r\n\r\n        nodeReordered: (state, action) => {\r\n            const { id, newParentId, newIndex } = action.payload\r\n            const node = getNode(state, id)\r\n\r\n            // disallow reorder if the new parent is a descendant of reordered node (ouroboros)\r\n            if (newParentId) {\r\n                if (isDisplayedDescendantOf(state, getNode(state, newParentId), node)) {\r\n                    return\r\n                }\r\n            }\r\n\r\n            removeNodeFromParentsDisplayedChildren(state, node)\r\n\r\n            node.parents[0] = newParentId\r\n            if (newParentId) {\r\n                var newParent = getNode(state, newParentId)\r\n                newParent.displayedChildren.splice(newIndex, 0, node.id)\r\n            }\r\n        },\r\n\r\n        nodeLabelUpdated: (state, action) => {\r\n            updateNodeAttribute(state, action.payload.id, 'label', action.payload.label)\r\n        },\r\n\r\n        nodeCompleteUpdated: (state, action) => {\r\n            updateNodeAttribute(state, action.payload.id, 'completed', action.payload.completed)\r\n        },\r\n\r\n        nodeIsValueUpdated: (state, action) => {\r\n            const node = updateNodeAttribute(state, action.payload.id, 'isValue', action.payload.isValue)\r\n            if (node.isValue && node.valueColour === undefined) {\r\n                node.valueColour = getNewNodeColour(state)\r\n            }\r\n        },\r\n\r\n        valueIconUpdated: (state, action) => {\r\n            const { id, icon } = action.payload\r\n\r\n            const node = getNode(state, id)\r\n            if (node) {\r\n                node.valueIcon = icon\r\n            }\r\n        },\r\n    },\r\n    extraReducers(builder) {\r\n        builder.addCase(getFirebaseProjectThunk.fulfilled, (state, action) => {\r\n            return action.payload\r\n        })\r\n    }\r\n})\r\n\r\nexport const { nodeAdded, nodeDeleted, nodeCompleteUpdated, nodeIsValueUpdated, valueIconUpdated, nodeReordered, nodeLabelUpdated, projectLoaded } = nodeSlice.actions\r\n\r\nexport const selectMaxDepth = (state) => state.nodes.present !== \"loading\" && Math.max.apply(null, state.nodes.present.map(node => {\r\n    var depth = 0\r\n    var visited = [node]\r\n    while (node && node.parents && node.parents.length && !visited.includes(node.parents[0])) {\r\n        node = getNode(state.nodes.present, node.parents[0])\r\n        visited.push(node)\r\n        depth++\r\n    }\r\n    return depth\r\n}))\r\n\r\n\r\nexport default undoable(nodeSlice.reducer)\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { valueIconUpdated } from './nodesSlice';\r\nimport styles from './Node.module.css';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\n\r\nexport function ValueIcon(props) {\r\n    const dispatch = useDispatch()\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false)\r\n\r\n    return (<>\r\n        <button className={'pure-button ' + styles.valueIcon} onClick={() => setShowEmojiPicker(!showEmojiPicker)}>{props.emoji}</button>\r\n\r\n        {\r\n            showEmojiPicker && <div className={styles.emojiPicker}>\r\n                <Picker\r\n                    onSelect={(emoji) => {\r\n                        dispatch(valueIconUpdated({\r\n                            id: props.nodeId,\r\n                            icon: emoji.native,\r\n                        }))\r\n                        setShowEmojiPicker(false)\r\n                    }}\r\n                    set=\"google\"\r\n                    showPreview={false}\r\n                    showSkinTones={false} \r\n                    recent={['star', 'muscle', 'heart', 'rainbow', 'hugging_face', 'person_climbing', 'family', 'money_with_wings',\r\n                            'sunglasses', 'brain', 'books', 'smile', 'scales', 'small_airplane', 'seedling', 'sleeping', 'dart', 'art']}\r\n                />\r\n            </div>\r\n\r\n        }\r\n    </>)\r\n}","export const ItemTypes = {\r\n    NODE: 'node',\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getLastActiveProject, setLastActiveProject } from '../../app/localstorage';\r\n\r\nconst initialState = {\r\n    focussedDepth: 0,\r\n    activeProject: getLastActiveProject()\r\n}\r\n\r\nexport const navigationSlice = createSlice({\r\n    name: 'navigation',\r\n    initialState,\r\n\r\n    reducers: {\r\n        focussedDepthUpdated: (state, action) => {\r\n            state.focussedDepth = action.payload.focussedDepth\r\n        },\r\n        activeProjectUpdated: (state, action) => {\r\n            state.activeProject = action.payload.activeProject\r\n            setLastActiveProject(state.activeProject) // persist this straight away\r\n            action.payload.focussedDepth = 0 // in case the focussed depth exceeds the new max depth\r\n        }\r\n    },\r\n})\r\n\r\nexport const { focussedDepthUpdated, activeProjectUpdated } = navigationSlice.actions\r\n\r\nexport const selectMaxDepth = (state) => state.navigation.focussedDepth\r\nexport const selectActiveProject = (state) => state.navigation.activeProject\r\n\r\nexport default navigationSlice.reducer\r\n","import { nanoid } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './Node.module.css';\r\nimport { nodeAdded, nodeDeleted, nodeLabelUpdated } from './nodesSlice';\r\n\r\nexport function NodeLabel(props) {\r\n    const dispatch = useDispatch()\r\n    const { node } = props\r\n\r\n    const keydownHandler = (event) => {\r\n        // add sibling node on \"enter\"\r\n        if (event.key === \"Enter\" && !event.shiftKey && !event.ctrlKey) {\r\n            dispatch(nodeAdded({\r\n                id: nanoid(),\r\n                parents: [node.parents[0]],\r\n                insertAfter: node.id,\r\n            }))\r\n            event.preventDefault()\r\n        }\r\n\r\n        // add child node on \"ctrl-enter\"\r\n        if (event.key === \"Enter\" && event.ctrlKey) {\r\n            dispatch(nodeAdded({\r\n                id: nanoid(),\r\n                parents: [node.id],\r\n            }))\r\n            event.preventDefault()\r\n        }\r\n\r\n        // delete node on backspace (if empty and no children)\r\n        if (event.key === \"Backspace\" && (!event.target.value || event.target.value === \"\") && node.displayedChildren.length === 0) {\r\n            dispatch(nodeDeleted({\r\n                id: node.id\r\n            }))\r\n            // TODO: would be nice to focus the previous sibling or parent if no siblings. not sure what the most react-y way to do this is\r\n            event.preventDefault()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <TextareaAutosize\r\n            className={styles.nodeLabel}\r\n            value={node.label}\r\n            onKeyDown={keydownHandler}\r\n            onChange={(e) => dispatch(nodeLabelUpdated({id: node.id, label: e.target.value}))}\r\n            minRows={1}\r\n            maxRows={5}\r\n            autoFocus={true}\r\n            placeholder={\"Enter a \" + (node.isValue ? \"value\" : \"task\") + \"...\"}\r\n        />\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { throttle } from 'lodash';\r\nimport { nodeDeleted, nodeCompleteUpdated, nodeIsValueUpdated, nodeReordered, getValueAncestors } from './nodesSlice';\r\nimport { ValueIcon } from './ValueIcon';\r\nimport { ItemTypes } from '../../DragItemTypes';\r\nimport { focussedDepthUpdated } from '../navigation/navigationSlice';\r\nimport styles from './Node.module.css';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport Reward from 'react-rewards';\r\nimport { NodeLabel } from './NodeLabel';\r\n\r\nexport function Node(props) {\r\n    const ref = useRef(null)\r\n    const rewardRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const node = useSelector(state => state.nodes.present.find(node => node.id === props.id))\r\n\r\n    const valueAncestors = useSelector(state => getValueAncestors(state.nodes.present, node.id))\r\n    const rewardEmojis = valueAncestors.length > 0 ? valueAncestors.map(ancestor => ancestor.valueIcon) : [\"✔️\", \"✅\", \"🎉\"]\r\n\r\n    const onCheckboxChange = (e) => {\r\n        dispatch(nodeCompleteUpdated({ id: node.id, completed: e.currentTarget.checked }))\r\n        if (e.currentTarget.checked) {\r\n            rewardRef.current?.rewardMe()\r\n        }\r\n    }\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: ItemTypes.NODE,\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            }\r\n        },\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return\r\n            }\r\n            const dragIndex = item.index\r\n            const hoverIndex = props.index\r\n\r\n            if (dragIndex === hoverIndex && (item.newParent ? item.newParent === node.parents[0] : item.parent === node.parents[0])) {\r\n                return\r\n            }\r\n            if (item.parent === node.parents[0]) {\r\n                const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n                const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n                const clientOffset = monitor.getClientOffset()\r\n                const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n                // Only perform the move when the mouse has crossed half of the items height\r\n                // When dragging downwards, only move when the cursor is below 50%\r\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                    return\r\n                }\r\n                // When dragging upwards, only move when the cursor is above 50%\r\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                    return\r\n                }\r\n            }\r\n            const newParentId = node.parents.length ? node.parents[0] : null\r\n\r\n            if (!monitor.canDrop()) { return } // in case the drop target no longer exists\r\n\r\n            // throttle it to reduce dancing as layout shifts\r\n            throttledReorderNode(dispatch, item, newParentId, hoverIndex)\r\n        },\r\n    })\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ItemTypes.NODE,\r\n        item: () => {\r\n            return {\r\n                id: node.id,\r\n                index: props.index,\r\n                parent: node.parents.length ? node.parents[0] : null,\r\n            }\r\n        },\r\n        isDragging: (monitor) => node.id === monitor.getItem().id,\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    if (!node) {\r\n        return (\r\n            <div className={styles.node}>\r\n                <p>Error: no node with ID '{props.id}'</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    drag(drop(ref))\r\n    return (\r\n        <Reward\r\n            ref={rewardRef}\r\n            type='emoji'\r\n            config={{\r\n                emoji: rewardEmojis,\r\n                lifetime: 150,\r\n            }}\r\n        >\r\n            <div \r\n                className={styles.nodeWrapper + (isDragging ? \" \" + styles.isDragging : \"\")}\r\n                style={{ 'zoom': props.zoom}}\r\n            >\r\n                <button className={'pure-button padded-button ' + styles.deleteNodeButton}\r\n                    onClick={() => dispatch(nodeDeleted({ id: node.id }))}>❌</button>\r\n                <button className={'pure-button padded-button ' + styles.toggleValueButton}\r\n                    onClick={() => dispatch(nodeIsValueUpdated({ id: node.id, isValue: !node.isValue }))}>🔄</button>\r\n\r\n                <div\r\n                    ref={ref} // drag this\r\n                    data-handler-id={handlerId} // dropzone\r\n                    className={styles.node}\r\n                    style={{ 'width': props.width }}\r\n                    onMouseEnter={throttle(() => dispatch(focussedDepthUpdated({ 'focussedDepth': props.depth })), 50)}\r\n                >\r\n                    {node.isValue ?\r\n                        <ValueIcon emoji={node.valueIcon} nodeId={node.id} />\r\n                        :\r\n                        <input type=\"checkbox\"\r\n                            checked={node.completed}\r\n                            onChange={onCheckboxChange}\r\n                        />}\r\n                    <NodeLabel node={node}/>\r\n                </div>\r\n            </div>\r\n        </Reward>\r\n    )\r\n}\r\n\r\n\r\nexport const throttledReorderNode = throttle((dispatch, item, newParentId, newIndex) => {\r\n    dispatch(nodeReordered({\r\n        id: item.id,\r\n        newParentId: newParentId,\r\n        newIndex: newIndex\r\n    }))\r\n    item.index = newIndex\r\n    item.newParent = newParentId\r\n}, 500)","import React, { useRef } from 'react';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { useDrop } from 'react-dnd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { nodeAdded } from './nodesSlice';\r\nimport { ItemTypes } from '../../DragItemTypes';\r\nimport { throttledReorderNode } from './Node';\r\nimport styles from './Tree.module.css';\r\n\r\nexport function AddChildButton(props) {\r\n    const ref = useRef(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const addNode = () => {\r\n        dispatch(nodeAdded({\r\n            id: nanoid(),\r\n            parents: [props.parent],\r\n        }))\r\n    }\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: ItemTypes.NODE,\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            }\r\n        },\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return\r\n            }\r\n\r\n            if (!monitor.canDrop()) { return }\r\n\r\n            throttledReorderNode(dispatch, item, props.parent, props.index)\r\n        },\r\n    })\r\n    drop(ref)\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={styles.addChildButton} \r\n            data-handler-id={handlerId} // drop zone\r\n            style={{ 'zoom': props.zoom, 'width': props.width}}\r\n        >\r\n            <button className='pure-button' onClick={addNode}>➕</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMaxDepth } from './nodesSlice';\r\nimport styles from './Tree.module.css';\r\nimport { Node } from './Node';\r\nimport { AddChildButton } from './AddChildButton';\r\n\r\nconst targetWidth = 200 // ideally every node in the tree would be this width, to be readable\r\n\r\nexport function Tree() {\r\n    const nodes = useSelector(state => state.nodes.present)\r\n\r\n    const maxDepth = useSelector(selectMaxDepth)\r\n    const focussedDepth = Math.min(useSelector(state => state.navigation.focussedDepth), maxDepth)\r\n    const widthsByDepth = getWidthsByDepth(focussedDepth, maxDepth)\r\n\r\n    const getDisplayedChildrenList = (current_depth, parent_id) => {\r\n        var children;\r\n        if (parent_id) {\r\n            const parent = nodes.find(node => node.id === parent_id)\r\n            children = parent.displayedChildren\r\n        } else {\r\n            children = nodes.filter(node => node.parents.length === 0).map(node => node.id)\r\n        }\r\n\r\n        const zoom = parseFloat(widthsByDepth[current_depth]) / parseFloat(targetWidth)\r\n\r\n        const addChildButton = (index) => \r\n            <li className={styles.treeElement} key={parent_id + \"_addChild\"}>\r\n                <AddChildButton parent={parent_id} index={index} zoom={zoom} width={widthsByDepth[current_depth]}/>\r\n            </li>\r\n\r\n        const wrapInUl = (elements) => <ul className={styles.treeElement + (parent_id === \"root\" ? \" \" + styles.tree : \"\")}>{elements}</ul>\r\n\r\n        if (!children || children.length === 0) {\r\n            return wrapInUl(addChildButton(0))\r\n        }\r\n\r\n        const list_elements = children.map((child, index) => {\r\n            const grandchildren = getDisplayedChildrenList(current_depth + 1, child)\r\n            \r\n            const childNode = nodes.find(node => node.id === child)\r\n            return (<li className={styles.treeElement} style={{...(childNode?.isValue ? {'--valueColour': childNode.valueColour} : {})}} key={child}>\r\n                <Node\r\n                    id={child}\r\n                    key={child}\r\n                    zoom={zoom}\r\n                    width={widthsByDepth[current_depth]}\r\n                    depth={current_depth}\r\n                    index={index}\r\n                />\r\n                {grandchildren}\r\n            </li>)\r\n        })\r\n\r\n        return wrapInUl(<>{list_elements} {addChildButton(children.length)}</>)\r\n    }\r\n\r\n    // setup re-render on screen resize\r\n    const [, setDimensions] = React.useState({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n    })\r\n    React.useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setDimensions({\r\n                height: window.innerHeight,\r\n                width: window.innerWidth\r\n            })\r\n        }, 200)\r\n        window.addEventListener('resize', debouncedHandleResize)\r\n        return _ => {\r\n            window.removeEventListener('resize', debouncedHandleResize)\r\n        }\r\n    })\r\n\r\n    if (nodes === \"loading\") {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.treeContainer}>\r\n            {getDisplayedChildrenList(0, 'root')}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst getWidthsByDepth = (focussedDepth, maxDepth) => {\r\n    // calculate the widths of each depth of the nodes\r\n    const numDepths = maxDepth + 1 // because depth is 0-indexed\r\n    const padding = 100 // a bit of extra fudge to avoid it adding scrollbars\r\n\r\n    const fullWidth = Math.min(document.documentElement.clientWidth, window.innerWidth) - padding\r\n    const connectionWidth = 30\r\n    var remainingWidth = fullWidth - numDepths * connectionWidth // work out how much space the nodes have\r\n\r\n    var widthsByDepth = Array(numDepths)\r\n    if (targetWidth * numDepths < remainingWidth) {\r\n        widthsByDepth.fill(targetWidth) // everything is target width\r\n        return widthsByDepth\r\n    }\r\n\r\n    // otherwise, apply faux fish-eye effect\r\n\r\n    const adjacentShrinkFactor = 0.15 // proportion of gap between prev adjacent and non-adjacents\r\n    const adjacentShrinkConstant = 10 // also need to shrink by a constant amount so we don't exceed screen width\r\n\r\n    widthsByDepth[focussedDepth] = targetWidth\r\n    remainingWidth -= targetWidth * 1.2 // add a bit of fudge\r\n\r\n    var adjacents = [focussedDepth, focussedDepth]\r\n    var remainingDepths = numDepths - 1\r\n    var width = targetWidth\r\n\r\n    while (adjacents[0] >= 0 || adjacents[1] < numDepths) {\r\n        var equiWidth = remainingWidth / remainingDepths\r\n\r\n        if (remainingDepths < 3) {\r\n            width = equiWidth\r\n        }\r\n\r\n        adjacents[0]--\r\n        adjacents[1]++\r\n        const shrinkFactorBonus = (adjacents[0] >= 0 && adjacents[1]) < numDepths ? adjacentShrinkFactor : 0\r\n\r\n        if (width > equiWidth) {\r\n            width = width - ((width - equiWidth) * (adjacentShrinkFactor + shrinkFactorBonus) + adjacentShrinkConstant)\r\n        }\r\n\r\n        // this could be a failsafe V but ideally dont need it\r\n        // if (width > remainingWidth) {\r\n        //     width = remainingWidth\r\n        // }\r\n\r\n        for (let adj_i = 0; adj_i < adjacents.length; adj_i++) {\r\n            const adjacent = adjacents[adj_i]\r\n            if (adjacent >= 0 && adjacent < numDepths) {\r\n                widthsByDepth[adjacent] = width\r\n                remainingDepths--\r\n                remainingWidth -= width\r\n            }\r\n        }\r\n    }\r\n\r\n    return widthsByDepth\r\n}\r\n\r\nexport function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ActionCreators } from 'redux-undo';\r\n// import Creatable from 'react-select/creatable';\r\n// import { toast } from 'react-toastify';\r\n// import { getSaveNames, loadState, saveState } from '../../app/localstorage';\r\n// import { AUTOSAVE_PROPS } from '../../app/store';\r\n// import { activeProjectUpdated, selectActiveProject } from '../navigation/navigationSlice';\r\n// import { projectLoaded } from '../nodes/nodesSlice';\r\nimport styles from './Menu.module.css';\r\n\r\nexport function MenuButtons() {\r\n    const dispatch = useDispatch()\r\n    // const saveNames = getSaveNames()\r\n\r\n\r\n    // const changeProject = (selection) => {\r\n    //     // these two dispatches are on different slices so aren't atomic\r\n    //     // that means an autosave could happen between them and overwrite the old project!\r\n    //     // so pause autosaving while we do these things :)\r\n    //     AUTOSAVE_PROPS['paused'] = true\r\n\r\n    //     if (saveNames.includes(selection.value)) {\r\n    //         // load existing project\r\n    //         dispatch(projectLoaded({loadedNodes: loadState(selection.value)}))\r\n    //         toast.success(`Loaded '${selection.value}'`)\r\n    //     } else {\r\n    //         // duplicate current project by saving as new project name\r\n    //         // TODO disallow duplicate project names\r\n    //         saveState(nodes, selection.value) // save the existing nodes to the new project\r\n    //         toast.success(`Saved project as '${selection.value}'`)\r\n    //     }\r\n    //     dispatch(activeProjectUpdated({activeProject: selection.value}))\r\n\r\n    //     AUTOSAVE_PROPS['paused'] = false\r\n    // }\r\n\r\n    // const nodes = useSelector(state => state.nodes.present)\r\n\r\n    // const activeProject = useSelector(selectActiveProject)\r\n\r\n    const canUndo = useSelector(state => state.nodes.past.length > 0 && !(state.nodes.past.length === 1 && (state.nodes.past[0] === \"loading\" || state.nodes.past === \"loading\")))\r\n    const canRedo = useSelector(state => state.nodes.future.length > 0)\r\n    return <div className={styles.menuDiv}>\r\n        <>\r\n            <a data-tip=\"React-tooltip\" style={{marginRight: \"5px\", marginTop: \"7px\", fontSize: \"larger\"}}> ⌨ </a>\r\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\">\r\n                <b>Keyboard shortcuts</b><br/><br/>\r\n                <i>When editing a task:</i><br/>\r\n                <b>Enter</b>: add another task<br/>\r\n                <b>Ctrl-Enter</b>: add a subtask<br/>\r\n                <b>Shift-Enter</b>: add a new line<br/>\r\n            </ReactTooltip>\r\n        </>\r\n\r\n        <button className='pure-button dark-button' onClick={() => dispatch(ActionCreators.undo())} disabled={!canUndo}>\r\n            Undo\r\n        </button>\r\n        <button className='pure-button dark-button' onClick={() => dispatch(ActionCreators.redo())} disabled={!canRedo}>\r\n            Redo\r\n        </button>\r\n        {/* <label htmlFor=\"loadProject\">Load project</label>\r\n        <Creatable\r\n            inputId=\"loadProject\"\r\n            className={styles.select}\r\n            defaultValue={{value: activeProject, label: activeProject}}\r\n            onChange={changeProject}\r\n            options={saveNames.map(save => {return {value: save, label: save}})}\r\n        /> */}\r\n    </div>\r\n}","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { Tree } from './features/nodes/Tree';\r\nimport { MenuButtons } from './features/menu/MenuButtons';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFirebaseProjectThunk } from './features/nodes/nodesSlice';\r\nimport { Link, Outlet, useParams } from 'react-router-dom';\r\nimport { activeProjectUpdated } from './features/navigation/navigationSlice';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    useEffect(() => {\r\n        dispatch(getFirebaseProjectThunk(params.projectId))\r\n        dispatch(activeProjectUpdated({activeProject: params.projectId}))\r\n        localStorage.setItem(\"lastCreatedProject\", params.projectId)\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div className=\"App\">\r\n                    <MenuButtons />\r\n                    <h1><Link style={{textDecoration: 'none'}} to={\"/\"}>Goal Tracker</Link></h1>\r\n                    <Tree />\r\n                    <ToastContainer\r\n                        position=\"bottom-right\"\r\n                        autoClose={5000}\r\n                        hideProgressBar\r\n                    />\r\n                </div>\r\n            </DndProvider>\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { createFirebaseProject } from '../../app/firebase';\r\nimport { getDefaultState } from '../nodes/nodesSlice';\r\nimport styles from './homepage.module.css';\r\n\r\nexport default function Homepage() {\r\n    const navigate = useNavigate()\r\n\r\n    const existingProjectId = localStorage.getItem(\"lastCreatedProject\")\r\n\r\n    const createProject = () => {\r\n        createFirebaseProject(getDefaultState()).then((docRef) => {\r\n            if (docRef) {\r\n                navigate(\"/projects/\" + docRef.id)\r\n            } else {\r\n                toast.error(\"Oops! Couldn't create project\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.content}>\r\n                <h1>Goal tracker</h1>\r\n                <p>Visualise how your daily to-do list contributes to your ultimate life goals.</p>\r\n                {existingProjectId ?\r\n                    <>\r\n                        <button className={`pure-button dark-button ${styles.homepageButtonPrimary}`} onClick={() => { navigate(\"/projects/\" + existingProjectId) }}>\r\n                            Continue\r\n                        </button>\r\n                        <br/>\r\n                        <button className={`pure-button dark-button ${styles.homepageButtonSecondary}`} onClick={() => { createProject() }}>Start a new map</button>\r\n                    </>\r\n                    :\r\n                    <button className={`pure-button dark-button ${styles.homepageButtonPrimary}`} onClick={createProject}>\r\n                        Get started\r\n                    </button>\r\n                }\r\n                <p>This is an early version, it's not feature complete. For now, use it on desktop, not mobile.</p>\r\n                <p>No need to log in. To find your map in the future, bookmark your unique map URL which is generated when you get started.</p>\r\n                <p>I would love your feedback - <a href=\"https://twitter.com/adambinks_\">message me on Twitter</a>.</p>\r\n                <p>The <a href=\"https://github.com/adam-binks/goal-tracker\">code is on GitHub</a>.</p>\r\n\r\n                <h2>How to use it</h2>\r\n                <p>Play around and see what works for you!</p>\r\n                <p>✅ Things like \"climb a tree\" are tasks, with a checkbox.</p>\r\n                <p>💪 Things like \"be healthy\" are <i>values</i>. Turn a task into a value by clicking 🔄.</p>\r\n                <p>One recipe for how to use this tool:</p>\r\n                <ol>\r\n                    <li>List the things you value intrinsically</li>\r\n                    <li>Then your add big projects or values that contribute to each intrinsic value, branching off them in the tree</li>\r\n                    <li>Keep adding more subgoals branching off, all the way down to today's to-do list</li>\r\n                </ol>\r\n                <p>Not sure what you value intrinsically? Try <a href=\"https://programs.clearerthinking.org/intrinsic_values_test.html\">this test</a>. Or\r\n                    go for a long walk on the beach.</p>\r\n                <p style={{textAlign: \"center\", color: 'grey', fontSize: \"150%\"}}>Made by <a href=\"https://adambinks.me\">Adam Binks</a>.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport nodesReducer from '../features/nodes/nodesSlice';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport { throttle } from 'lodash';\r\nimport { updateFirebaseProject } from './firebase';\r\nimport initSubscriber from 'redux-subscriber';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        nodes: nodesReducer,\r\n        navigation: navigationReducer, // NB not currently persisted\r\n    },\r\n})\r\n\r\nexport var AUTOSAVE_PROPS = {paused: false}\r\n\r\n// const throttledLocalStorageSave = throttle(() => {\r\n//     if (!AUTOSAVE_PROPS.paused) {\r\n//         saveState(store.getState().nodes, store.getState().navigation.activeProject)\r\n//     }\r\n// }, 1000) // autosave interval\r\n// store.subscribe(throttledLocalStorageSave)\r\n\r\nconst throttledFirebaseSave = throttle(() => {\r\n    if (!AUTOSAVE_PROPS.paused && store.getState().nodes !== \"loading\") {\r\n        updateFirebaseProject(store.getState().navigation.activeProject, store.getState().nodes)\r\n    }\r\n}, 5000) // autosave interval\r\n\r\nconst subscribe = initSubscriber(store)\r\n\r\n// only save to firebase when nodes changes \r\nsubscribe('nodes', (state) => {throttledFirebaseSave()})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Homepage from './features/homepage/Homepage';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Routes, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route exact path=\"/projects/:projectId\" element={\n                        <App />\n                    } />\n                    <Route path=\"*\"\n                        element={\n                            <main style={{ padding: \"1rem\", textAlign: \"center\" }}>\n                                <h2>Error 404! <Link to=\"/\">Go back</Link></h2>\n                            </main>\n                        }\n                    />\n                </Routes>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}