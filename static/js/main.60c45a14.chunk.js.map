{"version":3,"sources":["features/nodes/Node.module.css","features/nodes/Tree.module.css","features/homepage/homepage.module.css","features/menu/Menu.module.css","app/firebase.js","app/localstorage.js","features/nodes/nodesSlice.js","DragItemTypes.js","features/navigation/navigationSlice.js","features/nodes/NodeLabel.js","features/nodes/ValueIcon.js","features/nodes/Node.js","features/nodes/AddChildButton.js","features/nodes/Tree.js","features/menu/MenuButtons.js","App.js","features/homepage/Homepage.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","projects","collection","nodes","addDoc","present","docRef","toast","error","setDoc","doc","Date","toISOString","getFirebaseProject","getDoc","docSnap","exists","data","undefined","SAVES","AUTOSAVE","LAST_ACTIVE_PROJECT","loadAllSaves","serializedSaves","localStorage","getItem","JSON","parse","err","getLastActiveProject","project","saves","Object","keys","getSaveNames","rootNode","label","id","parents","getDefaultState","initialiseDisplayedChildren","getNode","state","find","node","updateNodeAttribute","attribute","value","removeNodeFromParentsDisplayedChildren","length","displayedChildren","index","indexOf","splice","getAncestors","ancestors","includes","push","forEach","parent","getValueAncestors","filter","ancestor","isValue","isDisplayedDescendantOf","descendant","getNewNodeColour","Please","make_color","i","potentialChild","map","valueColour","getFirebaseProjectThunk","createAsyncThunk","nodeSlice","createSlice","name","initialState","reducers","projectLoaded","_","action","payload","loadedNodes","nodeAdded","newNode","completed","valueIcon","insertAfter","valueAncestors","nodeDeleted","deleteRecursive","slice","child","findIndex","n","nodeReordered","newParentId","newIndex","nodeLabelUpdated","nodeCompleteUpdated","nodeIsValueUpdated","valueIconUpdated","icon","extraReducers","builder","addCase","fulfilled","actions","selectMaxDepth","Math","max","apply","depth","visited","undoable","reducer","ItemTypes","focussedDepth","activeProject","navigationSlice","focussedDepthUpdated","activeProjectUpdated","lastActiveProject","setItem","NodeLabel","props","dispatch","useDispatch","className","styles","nodeLabel","onKeyDown","event","key","shiftKey","ctrlKey","nanoid","preventDefault","target","onChange","e","minRows","maxRows","autoFocus","placeholder","ValueIcon","useState","showEmojiPicker","setShowEmojiPicker","onClick","emoji","emojiPicker","onSelect","nodeId","native","set","showPreview","showSkinTones","recent","Node","ref","useRef","rewardRef","useSelector","rewardEmojis","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","newParent","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","canDrop","throttledReorderNode","drop","useDrag","type","isDragging","drag","nodeWrapper","style","zoom","config","lifetime","deleteNodeButton","toggleValueButton","width","onMouseEnter","throttle","USE_FISHEYE_ZOOM","checked","currentTarget","rewardMe","AddChildButton","addChildButton","targetWidth","Tree","maxDepth","min","navigation","widthsByDepth","getWidthsByDepth","React","height","window","innerHeight","innerWidth","setDimensions","useEffect","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","arguments","debounce","addEventListener","removeEventListener","treeContainer","getDisplayedChildrenList","current_depth","parent_id","children","parseFloat","treeElement","wrapInUl","elements","tree","list_elements","grandchildren","childNode","numDepths","remainingWidth","document","documentElement","clientWidth","Array","fill","adjacents","remainingDepths","equiWidth","shrinkFactorBonus","adj_i","adjacent","MenuButtons","canUndo","past","canRedo","future","menuDiv","href","keyboardShortcutIcon","place","effect","ActionCreators","undo","disabled","redo","App","params","useParams","DndProvider","backend","HTML5Backend","textDecoration","to","position","autoClose","hideProgressBar","Homepage","navigate","useNavigate","existingProjectId","createProject","createFirebaseProject","then","content","homepageButtonPrimary","homepageButtonSecondary","textAlign","color","fontSize","store","configureStore","nodesReducer","navigationReducer","AUTOSAVE_PROPS","throttledFirebaseSave","getState","updateFirebaseProject","initSubscriber","subscribe","Boolean","location","hostname","match","ReactDOM","render","StrictMode","path","element","exact","padding","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60c45a14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__1fwl9\",\"nodeWrapper\":\"Node_nodeWrapper__3wWny\",\"isDragging\":\"Node_isDragging__1qANp\",\"nodeLabel\":\"Node_nodeLabel__1yTHS\",\"valueIcon\":\"Node_valueIcon__1bvAe\",\"emojiPicker\":\"Node_emojiPicker__33YEU\",\"hoverButton\":\"Node_hoverButton__HIBrT\",\"deleteNodeButton\":\"Node_deleteNodeButton__GBe5b Node_hoverButton__HIBrT\",\"toggleValueButton\":\"Node_toggleValueButton__3OpXU Node_hoverButton__HIBrT\",\"scaleIn\":\"Node_scaleIn__3980h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treeContainer\":\"Tree_treeContainer__1al1t\",\"tree\":\"Tree_tree__1_g1-\",\"treeElement\":\"Tree_treeElement__2O5vb\",\"addChildButton\":\"Tree_addChildButton__2req1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"homepage_content__3CkRG\",\"homepageButtonPrimary\":\"homepage_homepageButtonPrimary__3D9Xn\",\"homepageButtonSecondary\":\"homepage_homepageButtonSecondary__1jQmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuDiv\":\"Menu_menuDiv__2ErfY\",\"select\":\"Menu_select__JfwYL\",\"keyboardShortcutIcon\":\"Menu_keyboardShortcutIcon__1Xzcu\"};","import { initializeApp } from \"firebase/app\"\nimport { getFirestore, collection, setDoc, getDoc, doc, addDoc } from 'firebase/firestore/lite'\nimport { toast } from \"react-toastify\"\n\n// some concats included to reduce scraping\nconst firebaseConfig = {\n    apiKey: \"AIzaS\" + \"yDSca3qVB\" + \"kCgTig3S\" + \"zrbEvNbx\" + \"uY0YnMmGQ\", // eslint-disable-line no-useless-concat\n    authDomain: \"goal-tracker\" + \"-adam-binks.firebaseapp.com\", // eslint-disable-line no-useless-concat\n    projectId: \"goal-tracker\" + \"-adam-binks\", // eslint-disable-line no-useless-concat\n    storageBucket: \"goal-tracker\" + \"-adam-binks.appspot.com\", // eslint-disable-line no-useless-concat\n    messagingSenderId: \"143223897365\", // eslint-disable-line no-useless-concat\n    appId: \"1:143223897365\" + \":web:aeb3487a60d820c7637d1c\", // eslint-disable-line no-useless-concat\n    measurementId: \"G-43XXBKS2R9\"\n}\n\nconst app = initializeApp(firebaseConfig)\nconst db = getFirestore(app)\n\nconst projects = collection(db, 'projects')\n\nexport async function createFirebaseProject(nodes) {\n    try {\n        const docRef = await addDoc(projects, { \"nodes\": nodes.present })\n        return docRef\n    } catch (e) {\n        toast.error(\"Error creating project: \" + e)\n    }\n}\n\nexport async function updateFirebaseProject(projectId, nodes) {\n    if (nodes === \"loading\" || nodes?.present === \"loading\") {\n        return;\n    }\n    try {\n        await setDoc(doc(db, \"projects\", projectId), { \"nodes\": nodes.present, \"lastModified\": new Date().toISOString() })\n    } catch (e) {\n        toast.error(\"Error saving project: \" + e)\n    }\n}\n\nexport async function getFirebaseProject(projectId) {\n    const docRef = doc(db, \"projects\", projectId)\n    const docSnap = await getDoc(docRef)\n\n    if (docSnap.exists()) {\n        if (!docSnap.data().nodes) {\n            toast.error(`Missing root node on project id ${projectId}`)\n            return undefined\n        }\n        return docSnap.data().nodes\n    } else {\n        toast.error(`Project does not exist with id ${projectId}`)\n        return undefined\n    }\n}","export const SAVES = \"saves\"\nexport const AUTOSAVE = \"autosave\"\nconst LAST_ACTIVE_PROJECT = \"last_active_project\"\n\nconst loadAllSaves = () => {\n    try {\n        const serializedSaves = localStorage.getItem(SAVES);\n        if (serializedSaves === null) {\n            return undefined\n        }\n        return JSON.parse(serializedSaves)\n    } catch (err) {\n        return undefined\n    }\n}\n\nexport const loadState = (save) => {\n    const saves = loadAllSaves()\n    if (saves) {\n        return saves[save]\n    }\n}\n\nexport const saveState = (state, save) => {\n    var saves = loadAllSaves()\n    if (!saves) {\n        saves = {}\n    }\n    saves[save] = state\n    localStorage.setItem(SAVES, JSON.stringify(saves))\n}\n\nexport const getSaveNames = () => {\n    const saves = loadAllSaves()\n    if (saves) {\n        return Object.keys(saves)\n    }\n    return [AUTOSAVE]\n}\n\nexport const getLastActiveProject = () => {\n    var project = localStorage.getItem(LAST_ACTIVE_PROJECT)\n    if (project) {\n        return project\n    }\n\n    const saves = getSaveNames()\n    if (saves) {\n        return saves[0]\n    }\n\n    return AUTOSAVE // default\n}\n\nexport const setLastActiveProject = (lastActiveProject) => {\n    localStorage.setItem(LAST_ACTIVE_PROJECT, lastActiveProject)\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Please from 'pleasejs'\nimport undoable from 'redux-undo';\nimport { getFirebaseProject } from '../../app/firebase';\nimport { getLastActiveProject, loadState } from '../../app/localstorage';\n\nconst USE_FIREBASE = true\n\n// values are incomplete - to be used with spread operator\nconst getDefaultNode = () => {\n    return {\n        label: \"\",\n        completed: false,\n        // isValue: false,\n        valueIcon: '⭐',\n        displayedChildren: [],\n    }\n}\n\nconst rootNode = {\n    label: 'Root',\n    id: 'root',\n    parents: [],\n}\n\nexport const getDefaultState = () => {\n    return {present: initialiseDisplayedChildren([rootNode])}\n}\n\nconst getNode = (state, id) => state.find(node => node.id === id)\n\nconst updateNodeAttribute = (state, id, attribute, value) => {\n    const node = getNode(state, id)\n    if (node) {\n        node[attribute] = value\n    }\n    return node\n}\n\nconst removeNodeFromParentsDisplayedChildren = (nodes, node) => {\n    if (node && node.parents.length) {\n        const displayedChildren = getNode(nodes, node.parents[0])?.displayedChildren\n        if (displayedChildren) {\n            const index = displayedChildren.indexOf(node.id)\n            displayedChildren.splice(index, 1)\n        }\n    }\n}\n\nconst getAncestors = (nodes, id, ancestors) => {\n    const node = getNode(nodes, id)\n    if (!node || ancestors.includes(node)) { return ancestors }\n    ancestors.push(node)\n    node.parents.forEach(parent => getAncestors(nodes, parent, ancestors))\n\n    return ancestors\n}\n\nexport const getValueAncestors = (nodes, id) => {\n    return getAncestors(nodes, id, []).filter(ancestor => ancestor.isValue)\n}\n\nconst isDisplayedDescendantOf = (nodes, descendant, ancestor) => {\n    if (ancestor === descendant) {\n        return true\n    }\n    if (!descendant.parents.length) {\n        return false\n    }\n    return isDisplayedDescendantOf(nodes, getNode(nodes, descendant.parents[0]), ancestor)\n}\n\nconst getNewNodeColour = (nodes) => {\n    const opt = {\n        'value': 0.95\n    }\n    // const initialPallet = [\n    //     'green',\n    //     'blue',\n    //     'yellow',\n    //     'fuchsia',\n    //     'olive',\n    //     'red',\n    // ].map(htmlColor => Please.make_color({...opt, 'base_color': htmlColor }))\n\n    // const numValueNodes = nodes.filter(node => node.isValue).length\n    // console.log(numValueNodes);\n    // if (numValueNodes <= initialPallet.length) {\n    //     return initialPallet[numValueNodes - 1]\n    // } else {\n    return Please.make_color(opt)\n    // }\n}\n\nconst initialiseDisplayedChildren = (nodes) => {\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i]\n\n        // need to store this so we can reorder them\n        if (!node.displayedChildren) {\n            node.displayedChildren = nodes.filter(potentialChild => potentialChild.parents.length > 0 && potentialChild.parents[0] === node.id).map(node => node.id)\n        }\n\n        if (node.isValue && node.valueColour === undefined) {\n            node.valueColour = getNewNodeColour(nodes)\n        }\n    }\n    return nodes\n}\n\nfunction getInitialState() {\n    var state = undefined\n    if (USE_FIREBASE) {\n        return \"loading\"\n    }\n\n    state = loadState(getLastActiveProject())\n    if (!state) {\n        state = getDefaultState()\n    }\n    return initialiseDisplayedChildren(state)\n}\n\nexport const getFirebaseProjectThunk = createAsyncThunk(\"nodes/getFirebaseProject\", async (projectId) => {\n    return await getFirebaseProject(projectId)\n})\n\nexport const nodeSlice = createSlice({\n    name: 'nodes',\n    initialState: getInitialState(),\n\n    reducers: {\n        projectLoaded: (_, action) => {\n            return action.payload.loadedNodes // replace current state with loaded nodes\n        },\n\n        nodeAdded: (state, action) => {\n            const { id, parents } = action.payload\n\n            const isValue = action.payload.isValue !== undefined ? action.payload.isValue : (parents.length === 1 && parents[0] === \"root\")\n\n            var newNode = {\n                ...getDefaultNode(),\n                id: id,\n                parents: parents,\n                isValue: isValue,\n                valueColour: isValue && getNewNodeColour(state.nodes),\n            }\n            state.push(newNode)\n\n            if (parents.length > 0) {\n                const displayedChildren = getNode(state, parents[0]).displayedChildren\n                const insertAfter = action.payload.insertAfter\n                if (insertAfter && displayedChildren.indexOf(insertAfter) !== -1) {\n                    displayedChildren.splice(displayedChildren.indexOf(insertAfter) + 1, 0, id) // insert at index\n                }\n                else {\n                    displayedChildren.push(id)\n                }\n            }\n\n            const valueAncestors = getValueAncestors(state, id)\n            if (valueAncestors.length) {\n                newNode.valueIcon = valueAncestors[0].valueIcon\n            }\n        },\n\n        nodeDeleted: (state, action) => {\n            const deleteRecursive = (id) => {\n                const node = getNode(state, id)\n                node.displayedChildren.slice(0).map(child => deleteRecursive(child)) // slice to copy because we are deleting array elements\n                // remove this node\n                state.splice(state.findIndex((n) => n.id === node.id), 1)\n\n                removeNodeFromParentsDisplayedChildren(state, node)\n            }\n\n            deleteRecursive(action.payload.id)\n        },\n\n        nodeReordered: (state, action) => {\n            const { id, newParentId, newIndex } = action.payload\n            const node = getNode(state, id)\n\n            // disallow reorder if the new parent is a descendant of reordered node (ouroboros)\n            if (newParentId) {\n                if (isDisplayedDescendantOf(state, getNode(state, newParentId), node)) {\n                    return\n                }\n            }\n\n            removeNodeFromParentsDisplayedChildren(state, node)\n\n            node.parents[0] = newParentId\n            if (newParentId) {\n                var newParent = getNode(state, newParentId)\n                newParent.displayedChildren.splice(newIndex, 0, node.id)\n            }\n        },\n\n        nodeLabelUpdated: (state, action) => {\n            updateNodeAttribute(state, action.payload.id, 'label', action.payload.label)\n        },\n\n        nodeCompleteUpdated: (state, action) => {\n            updateNodeAttribute(state, action.payload.id, 'completed', action.payload.completed)\n        },\n\n        nodeIsValueUpdated: (state, action) => {\n            const node = updateNodeAttribute(state, action.payload.id, 'isValue', action.payload.isValue)\n            if (node.isValue && node.valueColour === undefined) {\n                node.valueColour = getNewNodeColour(state)\n            }\n        },\n\n        valueIconUpdated: (state, action) => {\n            const { id, icon } = action.payload\n\n            const node = getNode(state, id)\n            if (node) {\n                node.valueIcon = icon\n            }\n        },\n    },\n    extraReducers(builder) {\n        builder.addCase(getFirebaseProjectThunk.fulfilled, (state, action) => {\n            return action.payload\n        })\n    }\n})\n\nexport const { nodeAdded, nodeDeleted, nodeCompleteUpdated, nodeIsValueUpdated, valueIconUpdated, nodeReordered, nodeLabelUpdated, projectLoaded } = nodeSlice.actions\n\nexport const selectMaxDepth = (state) => state.nodes.present !== \"loading\" && Math.max.apply(null, state.nodes.present.map(node => {\n    var depth = 0\n    var visited = [node]\n    while (node && node.parents && node.parents.length && !visited.includes(node.parents[0])) {\n        node = getNode(state.nodes.present, node.parents[0])\n        visited.push(node)\n        depth++\n    }\n    return depth\n}))\n\n\nexport default undoable(nodeSlice.reducer)\n","export const ItemTypes = {\n    NODE: 'node',\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { getLastActiveProject, setLastActiveProject } from '../../app/localstorage';\n\nconst initialState = {\n    focussedDepth: 0,\n    activeProject: getLastActiveProject()\n}\n\nexport const navigationSlice = createSlice({\n    name: 'navigation',\n    initialState,\n\n    reducers: {\n        focussedDepthUpdated: (state, action) => {\n            state.focussedDepth = action.payload.focussedDepth\n        },\n        activeProjectUpdated: (state, action) => {\n            state.activeProject = action.payload.activeProject\n            setLastActiveProject(state.activeProject) // persist this straight away\n            action.payload.focussedDepth = 0 // in case the focussed depth exceeds the new max depth\n        }\n    },\n})\n\nexport const { focussedDepthUpdated, activeProjectUpdated } = navigationSlice.actions\n\nexport const selectMaxDepth = (state) => state.navigation.focussedDepth\nexport const selectActiveProject = (state) => state.navigation.activeProject\n\nexport default navigationSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styles from './Node.module.css';\nimport { nodeAdded, nodeDeleted, nodeLabelUpdated } from './nodesSlice';\n\nexport function NodeLabel(props) {\n    const dispatch = useDispatch()\n    const { node } = props\n\n    const keydownHandler = (event) => {\n        // add sibling node on \"enter\"\n        if (event.key === \"Enter\" && !event.shiftKey && !event.ctrlKey) {\n            dispatch(nodeAdded({\n                id: nanoid(),\n                parents: [node.parents[0]],\n                insertAfter: node.id,\n            }))\n            event.preventDefault()\n        }\n\n        // add child node on \"ctrl-enter\"\n        if (event.key === \"Enter\" && event.ctrlKey) {\n            dispatch(nodeAdded({\n                id: nanoid(),\n                parents: [node.id],\n            }))\n            event.preventDefault()\n        }\n\n        // delete node on backspace (if empty and no children)\n        if (event.key === \"Backspace\" && (!event.target.value || event.target.value === \"\") && node.displayedChildren.length === 0) {\n            dispatch(nodeDeleted({\n                id: node.id\n            }))\n            // TODO: would be nice to focus the previous sibling or parent if no siblings. not sure what the most react-y way to do this is\n            event.preventDefault()\n        }\n    }\n    \n    return (\n        <TextareaAutosize\n            className={styles.nodeLabel}\n            value={node.label}\n            onKeyDown={keydownHandler}\n            onChange={(e) => dispatch(nodeLabelUpdated({id: node.id, label: e.target.value}))}\n            minRows={1}\n            maxRows={5}\n            autoFocus={true}\n            placeholder={\"Enter a \" + (node.isValue ? \"value\" : \"task\") + \"...\"}\n        />\n    )\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { valueIconUpdated } from './nodesSlice';\nimport styles from './Node.module.css';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\n\nexport function ValueIcon(props) {\n    const dispatch = useDispatch()\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false)\n\n    return (<>\n        <button className={'pure-button ' + styles.valueIcon} onClick={() => setShowEmojiPicker(!showEmojiPicker)}>{props.emoji}</button>\n\n        {\n            showEmojiPicker && <div className={styles.emojiPicker}>\n                <Picker\n                    onSelect={(emoji) => {\n                        dispatch(valueIconUpdated({\n                            id: props.nodeId,\n                            icon: emoji.native,\n                        }))\n                        setShowEmojiPicker(false)\n                    }}\n                    set=\"google\"\n                    showPreview={false}\n                    showSkinTones={false} \n                    recent={['star', 'muscle', 'heart', 'rainbow', 'hugging_face', 'person_climbing', 'family', 'money_with_wings',\n                            'sunglasses', 'brain', 'books', 'smile', 'scales', 'small_airplane', 'seedling', 'sleeping', 'dart', 'art']}\n                />\n            </div>\n\n        }\n    </>)\n}","import 'emoji-mart/css/emoji-mart.css';\nimport { throttle } from 'lodash';\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Reward from 'react-rewards';\nimport { ItemTypes } from '../../DragItemTypes';\nimport { focussedDepthUpdated } from '../navigation/navigationSlice';\nimport styles from './Node.module.css';\nimport { NodeLabel } from './NodeLabel';\nimport { getValueAncestors, nodeCompleteUpdated, nodeDeleted, nodeIsValueUpdated, nodeReordered } from './nodesSlice';\nimport { USE_FISHEYE_ZOOM } from './Tree';\nimport { ValueIcon } from './ValueIcon';\n\nexport function Node(props) {\n    const ref = useRef(null)\n    const rewardRef = useRef(null)\n    const dispatch = useDispatch()\n    const node = useSelector(state => state.nodes.present.find(node => node.id === props.id))\n\n    const valueAncestors = useSelector(state => getValueAncestors(state.nodes.present, node.id))\n    const rewardEmojis = valueAncestors.length > 0 ? valueAncestors.map(ancestor => ancestor.valueIcon) : [\"✔️\", \"✅\", \"🎉\"]\n\n    const onCheckboxChange = (e) => {\n        dispatch(nodeCompleteUpdated({ id: node.id, completed: e.currentTarget.checked }))\n        if (e.currentTarget.checked) {\n            rewardRef.current?.rewardMe()\n        }\n    }\n\n    const [{ handlerId }, drop] = useDrop({\n        accept: ItemTypes.NODE,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index\n            const hoverIndex = props.index\n\n            if (dragIndex === hoverIndex && (item.newParent ? item.newParent === node.parents[0] : item.parent === node.parents[0])) {\n                return\n            }\n            if (item.parent === node.parents[0]) {\n                const hoverBoundingRect = ref.current?.getBoundingClientRect()\n                const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n                const clientOffset = monitor.getClientOffset()\n                const hoverClientY = clientOffset.y - hoverBoundingRect.top\n                // Only perform the move when the mouse has crossed half of the items height\n                // When dragging downwards, only move when the cursor is below 50%\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                    return\n                }\n                // When dragging upwards, only move when the cursor is above 50%\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                    return\n                }\n            }\n            const newParentId = node.parents.length ? node.parents[0] : null\n\n            if (!monitor.canDrop()) { return } // in case the drop target no longer exists\n\n            // throttle it to reduce dancing as layout shifts\n            throttledReorderNode(dispatch, item, newParentId, hoverIndex)\n        },\n    })\n\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.NODE,\n        item: () => {\n            return {\n                id: node.id,\n                index: props.index,\n                parent: node.parents.length ? node.parents[0] : null,\n            }\n        },\n        isDragging: (monitor) => node.id === monitor.getItem().id,\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n\n    if (!node) {\n        return (\n            <div className={styles.node}>\n                <p>Error: no node with ID '{props.id}'</p>\n            </div>\n        )\n    }\n\n    drag(drop(ref))\n    return (\n        <div\n            className={styles.nodeWrapper + (isDragging ? \" \" + styles.isDragging : \"\")}\n            style={props.zoom ? { 'zoom': props.zoom } : {}}\n        >\n            <Reward\n                ref={rewardRef}\n                type='emoji'\n                config={{\n                    emoji: rewardEmojis,\n                    lifetime: 150,\n                }}\n            >\n                <button className={'pure-button padded-button ' + styles.deleteNodeButton}\n                    onClick={() => dispatch(nodeDeleted({ id: node.id }))}>❌</button>\n                <button className={'pure-button padded-button ' + styles.toggleValueButton}\n                    onClick={() => dispatch(nodeIsValueUpdated({ id: node.id, isValue: !node.isValue }))}>🔄</button>\n                <div\n                    ref={ref} // drag this\n                    data-handler-id={handlerId} // dropzone\n                    className={styles.node}\n                    style={props.width ? { 'width': props.width } : {}}\n                    onMouseEnter={throttle(() => {\n                        USE_FISHEYE_ZOOM && dispatch(focussedDepthUpdated({ 'focussedDepth': props.depth }))\n                    }, 50)}\n                >\n                    {node.isValue ?\n                        <ValueIcon emoji={node.valueIcon} nodeId={node.id} />\n                        :\n                        <input type=\"checkbox\"\n                            checked={node.completed}\n                            onChange={onCheckboxChange}\n                        />}\n                    <NodeLabel node={node}/>\n                </div>\n            </Reward>\n        </div>\n    )\n}\n\n\nexport const throttledReorderNode = throttle((dispatch, item, newParentId, newIndex) => {\n    dispatch(nodeReordered({\n        id: item.id,\n        newParentId: newParentId,\n        newIndex: newIndex\n    }))\n    item.index = newIndex\n    item.newParent = newParentId\n}, 500)","import React, { useRef } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDrop } from 'react-dnd';\nimport { useDispatch } from 'react-redux';\nimport { nodeAdded } from './nodesSlice';\nimport { ItemTypes } from '../../DragItemTypes';\nimport { throttledReorderNode } from './Node';\nimport styles from './Tree.module.css';\n\nexport function AddChildButton(props) {\n    const ref = useRef(null)\n    const dispatch = useDispatch()\n\n    const addNode = () => {\n        dispatch(nodeAdded({\n            id: nanoid(),\n            parents: [props.parent],\n        }))\n    }\n\n    const [{ handlerId }, drop] = useDrop({\n        accept: ItemTypes.NODE,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n\n            if (!monitor.canDrop()) { return }\n\n            throttledReorderNode(dispatch, item, props.parent, props.index)\n        },\n    })\n    drop(ref)\n\n    return (\n        <div\n            ref={ref}\n            className={styles.addChildButton} \n            data-handler-id={handlerId} // drop zone\n            style={{ 'zoom': props.zoom, 'width': props.width}}\n        >\n            <button className='pure-button' onClick={addNode}>➕</button>\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AddChildButton } from './AddChildButton';\nimport { Node } from './Node';\nimport { selectMaxDepth } from './nodesSlice';\nimport styles from './Tree.module.css';\n\nexport const USE_FISHEYE_ZOOM = false\n\nconst targetWidth = 200 // ideally every node in the tree would be this width, to be readable\n\nexport function Tree() {\n    const nodes = useSelector(state => state.nodes.present)\n\n    const maxDepth = useSelector(selectMaxDepth)\n    const focussedDepth = Math.min(useSelector(state => state.navigation.focussedDepth), maxDepth)\n    const widthsByDepth = USE_FISHEYE_ZOOM && getWidthsByDepth(focussedDepth, maxDepth)\n\n    const getDisplayedChildrenList = (current_depth, parent_id) => {\n        var children;\n        if (parent_id) {\n            const parent = nodes.find(node => node.id === parent_id)\n            children = parent.displayedChildren\n        } else {\n            children = nodes.filter(node => node.parents.length === 0).map(node => node.id)\n        }\n\n        const zoom = USE_FISHEYE_ZOOM && parseFloat(widthsByDepth[current_depth]) / parseFloat(targetWidth)\n\n        const addChildButton = (index) =>\n            <li className={styles.treeElement} key={parent_id + \"_addChild\"}>\n                <AddChildButton parent={parent_id} index={index} zoom={zoom} width={widthsByDepth[current_depth]} />\n            </li>\n\n        const wrapInUl = (elements) => (\n            <ul className={styles.treeElement + (parent_id === \"root\" ? \" \" + styles.tree : \"\")}>\n                {elements}\n            </ul>\n        )\n\n        if (!children || children.length === 0) {\n            return wrapInUl(addChildButton(0))\n        }\n\n        const list_elements = children.map((child, index) => {\n            const grandchildren = getDisplayedChildrenList(current_depth + 1, child)\n\n            const childNode = nodes.find(node => node.id === child)\n            return (<li className={styles.treeElement} style={{ ...(childNode?.isValue ? { '--valueColour': childNode.valueColour } : {}) }} key={child}>\n                <Node\n                    id={child}\n                    key={child}\n                    zoom={zoom}\n                    width={widthsByDepth[current_depth]}\n                    depth={current_depth}\n                    index={index}\n                />\n                {grandchildren}\n            </li>)\n        })\n\n        return wrapInUl(<>{list_elements} {addChildButton(children.length)}</>)\n    }\n\n    // setup re-render on screen resize\n    const [, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    })\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }, 200)\n        window.addEventListener('resize', debouncedHandleResize)\n        return _ => {\n            window.removeEventListener('resize', debouncedHandleResize)\n        }\n    })\n\n    if (nodes === \"loading\") {\n        return <p>Loading...</p>\n    }\n\n    return (\n        <div className={styles.treeContainer}>\n            {getDisplayedChildrenList(0, 'root')}\n        </div>\n    )\n}\n\n\n// This calculates the width of nodes, for the fish eye zoom\nconst getWidthsByDepth = (focussedDepth, maxDepth) => {\n    // calculate the widths of each depth of the nodes\n    const numDepths = maxDepth + 1 // because depth is 0-indexed\n    const padding = 100 // a bit of extra fudge to avoid it adding scrollbars\n\n    const fullWidth = Math.min(document.documentElement.clientWidth, window.innerWidth) - padding\n    const connectionWidth = 30\n    var remainingWidth = fullWidth - numDepths * connectionWidth // work out how much space the nodes have\n\n    var widthsByDepth = Array(numDepths)\n    if (targetWidth * numDepths < remainingWidth) {\n        widthsByDepth.fill(targetWidth) // everything is target width\n        return widthsByDepth\n    }\n\n    // otherwise, apply faux fish-eye effect\n\n    const adjacentShrinkFactor = 0.15 // proportion of gap between prev adjacent and non-adjacents\n    const adjacentShrinkConstant = 10 // also need to shrink by a constant amount so we don't exceed screen width\n\n    widthsByDepth[focussedDepth] = targetWidth\n    remainingWidth -= targetWidth * 1.2 // add a bit of fudge\n\n    var adjacents = [focussedDepth, focussedDepth]\n    var remainingDepths = numDepths - 1\n    var width = targetWidth\n\n    while (adjacents[0] >= 0 || adjacents[1] < numDepths) {\n        var equiWidth = remainingWidth / remainingDepths\n\n        if (remainingDepths < 3) {\n            width = equiWidth\n        }\n\n        adjacents[0]--\n        adjacents[1]++\n        const shrinkFactorBonus = (adjacents[0] >= 0 && adjacents[1]) < numDepths ? adjacentShrinkFactor : 0\n\n        if (width > equiWidth) {\n            width = width - ((width - equiWidth) * (adjacentShrinkFactor + shrinkFactorBonus) + adjacentShrinkConstant)\n        }\n\n        // this could be a failsafe V but ideally dont need it\n        // if (width > remainingWidth) {\n        //     width = remainingWidth\n        // }\n\n        for (let adj_i = 0; adj_i < adjacents.length; adj_i++) {\n            const adjacent = adjacents[adj_i]\n            if (adjacent >= 0 && adjacent < numDepths) {\n                widthsByDepth[adjacent] = width\n                remainingDepths--\n                remainingWidth -= width\n            }\n        }\n    }\n\n    return widthsByDepth\n}\n\nexport function debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport { ActionCreators } from 'redux-undo';\n// import Creatable from 'react-select/creatable';\n// import { toast } from 'react-toastify';\n// import { getSaveNames, loadState, saveState } from '../../app/localstorage';\n// import { AUTOSAVE_PROPS } from '../../app/store';\n// import { activeProjectUpdated, selectActiveProject } from '../navigation/navigationSlice';\n// import { projectLoaded } from '../nodes/nodesSlice';\nimport styles from './Menu.module.css';\n\nexport function MenuButtons() {\n    const dispatch = useDispatch()\n    // const saveNames = getSaveNames()\n\n\n    // const changeProject = (selection) => {\n    //     // these two dispatches are on different slices so aren't atomic\n    //     // that means an autosave could happen between them and overwrite the old project!\n    //     // so pause autosaving while we do these things :)\n    //     AUTOSAVE_PROPS['paused'] = true\n\n    //     if (saveNames.includes(selection.value)) {\n    //         // load existing project\n    //         dispatch(projectLoaded({loadedNodes: loadState(selection.value)}))\n    //         toast.success(`Loaded '${selection.value}'`)\n    //     } else {\n    //         // duplicate current project by saving as new project name\n    //         // TODO disallow duplicate project names\n    //         saveState(nodes, selection.value) // save the existing nodes to the new project\n    //         toast.success(`Saved project as '${selection.value}'`)\n    //     }\n    //     dispatch(activeProjectUpdated({activeProject: selection.value}))\n\n    //     AUTOSAVE_PROPS['paused'] = false\n    // }\n\n    // const nodes = useSelector(state => state.nodes.present)\n\n    // const activeProject = useSelector(selectActiveProject)\n\n    const canUndo = useSelector(state => state.nodes.past.length > 0 && !(state.nodes.past.length === 1 && (state.nodes.past[0] === \"loading\" || state.nodes.past === \"loading\")))\n    const canRedo = useSelector(state => state.nodes.future.length > 0)\n    return <div className={styles.menuDiv}>\n        <>\n            <a data-tip=\"React-tooltip\" href=\"#\" onClick={(e) => e.preventDefault()} className={styles.keyboardShortcutIcon}> ⌨ </a>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\">\n                <b>Keyboard shortcuts</b><br/><br/>\n                <i>When editing a task:</i><br/>\n                <b>Enter</b>: add another task<br/>\n                <b>Ctrl-Enter</b>: add a subtask<br/>\n                <b>Shift-Enter</b>: add a new line<br/>\n            </ReactTooltip>\n        </>\n\n        <button className='pure-button dark-button' onClick={() => dispatch(ActionCreators.undo())} disabled={!canUndo}>\n            Undo\n        </button>\n        <button className='pure-button dark-button' onClick={() => dispatch(ActionCreators.redo())} disabled={!canRedo}>\n            Redo\n        </button>\n        {/* <label htmlFor=\"loadProject\">Load project</label>\n        <Creatable\n            inputId=\"loadProject\"\n            className={styles.select}\n            defaultValue={{value: activeProject, label: activeProject}}\n            onChange={changeProject}\n            options={saveNames.map(save => {return {value: save, label: save}})}\n        /> */}\n    </div>\n}","import React, { useEffect } from 'react';\nimport './App.css';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { Tree } from './features/nodes/Tree';\nimport { MenuButtons } from './features/menu/MenuButtons';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { getFirebaseProjectThunk } from './features/nodes/nodesSlice';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { activeProjectUpdated } from './features/navigation/navigationSlice';\n\nfunction App() {\n    const dispatch = useDispatch()\n    const params = useParams()\n    useEffect(() => {\n        dispatch(getFirebaseProjectThunk(params.projectId))\n        dispatch(activeProjectUpdated({activeProject: params.projectId}))\n        localStorage.setItem(\"lastCreatedProject\", params.projectId)\n    })\n\n    return (\n        <>\n            <DndProvider backend={HTML5Backend}>\n                <div className=\"App\">\n                    <MenuButtons />\n                    <h1><Link style={{textDecoration: 'none'}} to={\"/\"}>Map of Why</Link></h1>\n                    <Tree />\n                    <ToastContainer\n                        position=\"bottom-right\"\n                        autoClose={5000}\n                        hideProgressBar\n                    />\n                </div>\n            </DndProvider>\n            <Outlet />\n        </>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { createFirebaseProject } from '../../app/firebase';\nimport { getDefaultState } from '../nodes/nodesSlice';\nimport styles from './homepage.module.css';\n\nexport default function Homepage() {\n    const navigate = useNavigate()\n\n    const existingProjectId = localStorage.getItem(\"lastCreatedProject\")\n\n    const createProject = () => {\n        createFirebaseProject(getDefaultState()).then((docRef) => {\n            if (docRef) {\n                navigate(\"/projects/\" + docRef.id)\n            } else {\n                toast.error(\"Oops! Couldn't create project\")\n            }\n        })\n    }\n\n    return (\n        <>\n            <div className={styles.content}>\n                <h1>Map of Why</h1>\n                <p>Visualise how your daily to-do list contributes to your ultimate life goals.</p>\n                {existingProjectId ?\n                    <>\n                        <button className={`pure-button dark-button ${styles.homepageButtonPrimary}`} onClick={() => { navigate(\"/projects/\" + existingProjectId) }}>\n                            Continue\n                        </button>\n                        <br/>\n                        <button className={`pure-button dark-button ${styles.homepageButtonSecondary}`} onClick={() => { createProject() }}>Start a new map</button>\n                    </>\n                    :\n                    <button className={`pure-button dark-button ${styles.homepageButtonPrimary}`} onClick={createProject}>\n                        Get started\n                    </button>\n                }\n                <p>This is an early version, it's not feature complete. For now, use it on desktop, not mobile.</p>\n                <p>No need to log in. To find your map in the future, bookmark your unique map URL which is generated when you get started.</p>\n                <p>I would love your feedback - <a href=\"https://twitter.com/adambinks_\">message me on Twitter</a>.</p>\n                <p>The <a href=\"https://github.com/adam-binks/map-of-why\">code is on GitHub</a>.</p>\n\n                <h2>How to use it</h2>\n                <p>Play around and see what works for you!</p>\n                <p>✅ Things like \"climb a tree\" are tasks, with a checkbox.</p>\n                <p>💪 Things like \"be healthy\" are <i>values</i>. Turn a task into a value by clicking 🔄.</p>\n                <p>One recipe for how to use this tool:</p>\n                <ol>\n                    <li>List the things you value intrinsically</li>\n                    <li>Then your add big projects or values that contribute to each intrinsic value, branching off them in the tree</li>\n                    <li>Keep adding more subgoals branching off, all the way down to today's to-do list</li>\n                </ol>\n                <p>Not sure what you value intrinsically? Try <a href=\"https://programs.clearerthinking.org/intrinsic_values_test.html\">this test</a>. Or\n                    go for a long walk on the beach.</p>\n                <p style={{textAlign: \"center\", color: 'grey', fontSize: \"150%\"}}>Made by <a href=\"https://adambinks.me\">Adam Binks</a>.</p>\n            </div>\n        </>\n    )\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { throttle } from 'lodash';\nimport initSubscriber from 'redux-subscriber';\nimport navigationReducer from '../features/navigation/navigationSlice';\nimport nodesReducer from '../features/nodes/nodesSlice';\nimport { updateFirebaseProject } from './firebase';\n\nexport const store = configureStore({\n    reducer: {\n        nodes: nodesReducer,\n        navigation: navigationReducer, // NB not currently persisted\n    },\n})\n\nexport var AUTOSAVE_PROPS = {paused: false}\n\n// const throttledLocalStorageSave = throttle(() => {\n//     if (!AUTOSAVE_PROPS.paused) {\n//         saveState(store.getState().nodes, store.getState().navigation.activeProject)\n//     }\n// }, 1000) // autosave interval\n// store.subscribe(throttledLocalStorageSave)\n\nconst throttledFirebaseSave = throttle(() => {\n    if (!AUTOSAVE_PROPS.paused && store.getState().nodes !== \"loading\") {\n        updateFirebaseProject(store.getState().navigation.activeProject, store.getState().nodes)\n    }\n}, 5000) // autosave interval\n\nconst subscribe = initSubscriber(store)\n\n// when changes happen (At most every 5000ms) back up the entire application state to Firebase\n// only save to firebase when nodes changes \nsubscribe('nodes', (state) => {throttledFirebaseSave()})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Homepage from './features/homepage/Homepage';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Routes, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route exact path=\"/projects/:projectId\" element={\n                        <App />\n                    } />\n                    <Route path=\"*\"\n                        element={\n                            <main style={{ padding: \"1rem\", textAlign: \"center\" }}>\n                                <h2>Error 404! <Link to=\"/\">Go back</Link></h2>\n                            </main>\n                        }\n                    />\n                </Routes>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}